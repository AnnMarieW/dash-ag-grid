from dash import html, register_page
from utils.code_and_show import example_app, make_tabs
from utils.other_components import up_next, make_md
from utils.utils import app_description


register_page(
    __name__,
    order=1,
    description=app_description,
    title="Dash AG Grid - Row IDs",
)

text1 = """

# Row IDs
This section explains how the grid assigns row IDs and shows how applications can supply custom row IDs.

Each grid row has a unique row ID which is used by the grid to identify rows, e.g. for identifying what rows are currently selected. These row IDs can be Grid Assigned or Application Assigned.

### Grid Assigned IDs
Row IDs are generated by the grid when data is supplied to the grid. The grid uses a sequence starting at 0 and incrementing by 1 to assign row IDs, so for example if there are three rows they will have IDs of 0, 1 and 2. The row ID does not change for a row once it is set.

If the row data is updated to a new set, the grid will continue with its sequence. For example if 10 rows are initially set, IDs `[0..9]` are used. Then, if the data is set again for another 10 rows, IDs `[10..19]` are used. This is true even if the second set of rows are logically identical to the first set of rows (i.e. it's a refresh operation).

When Row Grouping another zero based sequence is used and prefixed with row-group-. For example Row Groups will have IDs row-group-0, row-group-1 and row-group-2.

"""

text2 = """

### Application Assigned IDs
When the Application assigns Row IDs, this provides a common Row ID across the grid and the Application. This has advantages such as:

When updating Row Data (either by updating the rowData attribute, or using Update Transactions), the grid uses the Row ID to map old vs new data (e.g. it can work out which Rows to add / remove / update rather than doing a blanket replacement of old vs new data). This allows the grid to keep state such as Row Selection.


Setting Row IDs is done using the `getRowId` prop:
> `getRowId` (string) Sets the ID for a particular row node based on the data.

_Note:  Row IDs are required when updating rowData in a callback_

We will show two examples of assigning row ids - using an existing unique id and creating a unique id in the dataset.

#### Example 1:
In this example, the data contains a unique id in the dataset in the "id" column.  We use `getRowId="params.data.id"` to assign the id.

"""

text3 = """
#### Example 2:

In this example, the data does not contain a unique id in the dataset.  We first create a unique id using the
 dataframe's index, then assign it using `getRowId="params.data.index"`

"""


layout = html.Div(
    [
        make_md(text1),
        example_app("examples.rows.row_ids", make_layout=make_tabs),
        make_md(text2),
        example_app("examples.rows.row_ids_from_data", make_layout=make_tabs),
        make_md(text3),
        example_app("examples.rows.row_ids_from_df_index", make_layout=make_tabs),
        # up_next("text"),
    ],
)
