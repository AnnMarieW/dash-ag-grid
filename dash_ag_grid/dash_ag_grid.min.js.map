{"version":3,"sources":["webpack://dash_ag_grid/webpack/bootstrap","webpack://dash_ag_grid/external \"PropTypes\"","webpack://dash_ag_grid/external \"React\"","webpack://dash_ag_grid/./src/lib/LazyLoader.js","webpack://dash_ag_grid/./src/lib/components/AgGrid.react.js","webpack://dash_ag_grid/./node_modules/css-loader/dist/runtime/api.js","webpack://dash_ag_grid/./node_modules/style-loader/lib/addStyles.js","webpack://dash_ag_grid/./src/lib/custom_styles.css?7454","webpack://dash_ag_grid/./src/lib/custom_styles.css","webpack://dash_ag_grid/./node_modules/style-loader/lib/urls.js","webpack://dash_ag_grid/./src/lib/components/AgGridColumn.react.js","webpack://dash_ag_grid/./src/lib/index.js","webpack://dash_ag_grid/external \"ReactDOM\""],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","installedModules","1","jsonpScriptSrc","__webpack_require__","p","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","url","getCurrentScript","currentScript","doc_scripts","getElementsByTagName","scripts","filter","s","async","text","textContent","slice","split","join","__jsonpScriptSrc__","isLocal","test","isLocalScript","srcFragments","fileFragments","splice","jsonpArray","window","oldJsonpFunction","RealAgGrid","lazy","LazyLoader","DashAgGrid","fallback","this","props","Component","defaultProps","style","height","width","theme","enableResetColumnState","enableExportDataAsCsv","persisted_props","persistence_type","propTypes","id","PropTypes","string","setProps","func","children","node","persistence","oneOfType","bool","number","arrayOf","oneOf","csvExportParams","shape","columnSeparator","suppressQuotes","prependContent","appendContent","allColumns","columnKeys","fileName","onlySelected","onlySelectedAllPages","skipColumnGroupHeaders","skipColumnHeaders","skipRowGroups","skipPinnedTop","skipPinnedBottom","columnSize","cellStyle","styleConditions","condition","isRequired","defaultStyle","getRowsRequest","startRow","endRow","sortModel","any","filterModel","context","successCallback","failCallback","getDetailRequest","requestTime","getDetailResponse","clickData","hoverData","getRowsResponse","rowData","rowCount","storeInfo","licenseKey","enableEnterpriseModules","virtualRowData","columnDefs","defaultColDef","defaultColGroupDef","columnTypes","colResizeDefault","suppressAutoSize","autoSizePadding","skipHeaderOnAutoSize","suppressColumnMoveAnimation","suppressMovableColumns","suppressFieldDotNotation","unSortIcon","suppressMultiSort","suppressMenuHide","autoGroupColumnDef","allowDragFromColumnsToolPanel","applyColumnDefOrder","quickFilterText","cacheQuickFilter","sortingOrder","accentedSort","multiSortKey","suppressMaintainUnsortedOrder","excludeChildrenWhenTreeDataFiltering","rowSelection","rowMultiSelectWithClick","suppressRowDeselection","suppressRowClickSelection","suppressCellSelection","enableRangeSelection","enableRangeHandle","enableFillHandle","fillHandleDirection","suppressClearOnFillReduction","rowDragManaged","suppressRowDrag","suppressMoveWhenRowDragging","singleClickEdit","suppressClickEdit","editType","enableCellChangeFlash","cellFlashDelay","cellFadeDelay","allowShowChangeAfterFilter","stopEditingWhenGridLosesFocus","enterMovesDown","headerHeight","groupHeaderHeight","floatingFiltersHeight","pivotHeaderHeight","pivotGroupHeaderHeight","groupUseEntireRow","groupDefaultExpanded","groupSuppressAutoColumn","groupMultiAutoColumn","groupSelectsChildren","groupIncludeFooter","groupIncludeTotalFooter","groupSuppressBlankHeader","groupSelectsFiltered","showOpenedGroup","groupRemoveSingleChildren","groupRemoveLowestSingleChildren","groupHideOpenParents","rowGroupPanelShow","pivotMode","pivotPanelShow","suppressAggFuncInHeader","suppressAggAtRootLevel","aggregateOnlyChangedColumns","functionsReadOnly","aggFuncs","suppressAggFilteredOnly","suppressMakeVisibleAfterUnGroup","pivotColumnGroupTotals","pivotRowTotals","suppressExpandablePivotGroups","pivotSuppressAutoColumn","rowModelType","immutableData","suppressModelUpdateAfterUpdateTransaction","pinnedTopRowData","pinnedBottomRowData","serverSideStoreType","cacheBlockSize","cacheOverflowSize","maxBlocksInCache","maxConcurrentDatasourceRequests","blockLoadDebounceMillis","purgeClosedRowNodes","serverSideFilteringAlwaysResets","viewportRowModelPageSize","viewportRowModelBufferSize","viewportDatasource","alwaysShowHorizontalScroll","alwaysShowVerticalScroll","debounceVerticalScrollbar","suppressHorizontalScroll","suppressColumnVirtualisation","suppressRowVirtualisation","suppressMaxRenderedRowRestriction","suppressScrollOnNewData","suppressAnimationFrame","pagination","paginationPageSize","paginationAutoPageSize","suppressPaginationPanel","paginateChildRows","groupRowRenderer","groupRowInnerRenderer","fullWidthCellRenderer","masterDetail","detailCellRendererParams","detailGridOptions","detailColName","suppressCallback","keepDetailRows","keepDetailRowsCount","detailRowHeight","detailRowAutoHeight","icons","rowHeight","animateRows","rowStyle","rowClass","rowClassRules","excelStyles","scrollbarWidth","suppressRowHoverHighlight","suppressCopyRowsToClipboard","copyHeadersToClipboard","clipboardDeliminator","suppressFocusAfterRefresh","suppressLastEmptyLineOnPaste","enableCellTextSelection","localeText","suppressLoadingOverlay","suppressNoRowsOverlay","overlayLoadingTemplate","overlayNoRowsTemplate","loadingOverlayComponent","loadingOverlayComponentParams","noRowsOverlayComponent","noRowsOverlayComponentParams","enableCharts","chartThemes","customChartThemes","chartThemeOverrides","components","frameworkComponents","popupParent","valueCache","valueCacheNeverExpires","defaultExportParams","suppressMiddleClickScrolls","suppressPreventDefaultOnMouseWheel","enableBrowserTooltips","tooltipShowDelay","tooltipMouseTrack","enableCellExpressions","domLayout","ensureDomOrder","rowBuffer","alignedGrids","suppressParentsInRowNodes","suppressDragLeaveHidesColumns","layoutInterval","enableRtl","debug","suppressContextMenu","preventDefaultOnContextMenu","allowContextMenuWithControlKey","statusBar","suppressTouch","suppressAsyncEvents","suppressCsvExport","suppressExcelExport","asyncTransactionWaitMillis","suppressPropertyNamesCheck","suppressRowTransform","serverSideSortingAlwaysResets","suppressBrowserResizeObserver","cellClicked","cellDoubleClicked","cellFocused","cellMouseOver","cellMouseOut","cellMouseDown","rowClicked","rowDoubleClicked","rowSelected","selectionChanged","cellContextMenu","rangeSelectionChanged","cellValueChanged","rowValueChanged","cellEditingStarted","cellEditingStopped","rowEditingStarted","rowEditingStopped","pasteStart","pasteEnd","sortChanged","filterChanged","filterModified","rowDragEnter","rowDragMove","rowDragLeave","rowDragEnd","columnVisible","columnPinned","columnResized","columnMoved","columnRowGroupChanged","columnValueChanged","columnPivotModeChanged","columnPivotChanged","columnGroupOpened","newColumnsLoaded","gridColumnsChanged","displayedColumnsChanged","virtualColumnsChanged","columnEverythingChanged","gridReady","gridSizeChanged","modelUpdated","firstDataRendered","rowGroupOpened","expandOrCollapseAll","paginationChanged","pinnedRowDataChanged","virtualRowRemoved","viewportChanged","bodyScroll","dragStarted","dragStopped","rowDataChanged","rowDataUpdated","toolPanelVisibleChanged","componentStateChanged","animationQueueEmpty","AsyncTransactionsFlushed","cellKeyDown","cellKeyPress","sideBar","useSourceMap","list","toString","map","item","content","cssMapping","btoa","sourceMapping","sourceMap","base64","unescape","encodeURIComponent","JSON","stringify","concat","sourceURLs","sources","source","sourceRoot","cssWithMappingToString","mediaQuery","dedupe","alreadyImportedModules","_i","fn","memo","stylesInDom","isOldIE","atob","apply","arguments","getTarget","parent","querySelector","getElement","styleTarget","HTMLIFrameElement","contentDocument","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","options","domStyle","refs","j","parts","addStyle","listToStyles","newStyles","base","part","css","media","insertStyleElement","insertInto","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","firstChild","before","removeStyleElement","parentNode","removeChild","idx","indexOf","createStyleElement","attrs","nonce","getNonce","addAttrs","el","keys","forEach","obj","update","remove","result","transform","default","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","link","rel","createLinkElement","updateLink","href","applyToTag","newObj","DEBUG","newList","mayRemove","textStore","replaceText","index","replacement","Boolean","styleSheet","cssText","cssNode","createTextNode","childNodes","autoFixUrls","convertToAbsoluteUrls","blob","oldSrc","locals","___CSS_LOADER_API_IMPORT___","location","baseUrl","protocol","host","currentDir","pathname","replace","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","DashAgGridColumn","headerCheckboxSelection","headerCheckboxSelectionFilteredOnly","headerName","columnGroupShow","headerClass","toolPanelClass","suppressColumnsToolPanel","suppressFiltersToolPanel","field","colId","defaultWidth","minWidth","maxWidth","flex","initialFlex","filterParams","floatingFilter","floatingFilterComponent","floatingFilterComponentParams","hide","initialHide","pinned","initialPinned","lockPosition","lockVisible","lockPinned","sortable","sort","initialSort","sortIndex","initialSortIndex","resizable","headerTooltip","tooltipField","tooltipValueGetter","checkboxSelection","rowDrag","rowDragText","dndSource","dndSourceOnRowDrag","cellClass","cellClassRules","editable","cellRenderer","cellRendererParams","pinnedRowCellRenderer","pinnedRowCellRendererParams","cellRendererSelector","cellEditor","cellEditorParams","headerComponent","headerComponentParams","getQuickFilterText","aggFunc","initialAggFunc","allowedAggFuncs","rowGroup","initialRowGroup","rowGroupIndex","initialRowGroupIndex","pivot","initialPivot","pivotIndex","initialPivotIndex","enableRowGroup","enablePivot","enableValue","menuTabs","suppressMenu","suppressSizeToFit","suppressMovable","suppressNavigable","suppressCellFlash","autoHeight","wrapText","chartDataType","columnsMenuParams","groupId"],"mappings":"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","file":"dash_ag_grid.min.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t};\n\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({\"0\":\"async-dashaggrid\"}[chunkId]||chunkId) + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };var getCurrentScript = function() {\n \t    var script = document.currentScript;\n \t    if (!script) {\n \t        /* Shim for IE11 and below */\n \t        /* Do not take into account async scripts and inline scripts */\n\n \t        var doc_scripts = document.getElementsByTagName('script');\n \t        var scripts = [];\n\n \t        for (var i = 0; i < doc_scripts.length; i++) {\n \t            scripts.push(doc_scripts[i]);\n \t        }\n\n \t        scripts = scripts.filter(function(s) { return !s.async && !s.text && !s.textContent; });\n \t        script = scripts.slice(-1)[0];\n \t    }\n\n \t    return script;\n \t};\n\n \tvar isLocalScript = function(script) {\n \t    return /\\/_dash-component-suites\\//.test(script.src);\n \t};\n\n \tObject.defineProperty(__webpack_require__, 'p', {\n \t    get: (function () {\n \t        var script = getCurrentScript();\n\n \t        var url = script.src.split('/').slice(0, -1).join('/') + '/';\n\n \t        return function() {\n \t            return url;\n \t        };\n \t    })()\n \t});\n\n \tif (typeof jsonpScriptSrc !== 'undefined') {\n \t    var __jsonpScriptSrc__ = jsonpScriptSrc;\n \t    jsonpScriptSrc = function(chunkId) {\n \t        var script = getCurrentScript();\n \t        var isLocal = isLocalScript(script);\n\n \t        var src = __jsonpScriptSrc__(chunkId);\n\n \t        if(!isLocal) {\n \t            return src;\n \t        }\n\n \t        var srcFragments = src.split('/');\n \t        var fileFragments = srcFragments.slice(-1)[0].split('.');\n\n \t        fileFragments.splice(1, 0, \"v1_3_1m1671028888\");\n \t        srcFragments.splice(-1, 1, fileFragments.join('.'))\n\n \t        return srcFragments.join('/');\n \t    };\n \t}\n\n\n \tvar jsonpArray = window[\"webpackJsonpdash_ag_grid\"] = window[\"webpackJsonpdash_ag_grid\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","(function() { module.exports = window[\"PropTypes\"]; }());","(function() { module.exports = window[\"React\"]; }());","export default {\n    agGrid: () =>\n        import(/* webpackChunkName: \"dashaggrid\" */ './fragments/AgGrid.react'),\n};\n","\nimport PropTypes from 'prop-types';\nimport LazyLoader from '../LazyLoader';\nimport React, {Component, lazy, Suspense} from 'react';\n\nconst RealAgGrid = lazy(LazyLoader.agGrid);\n\nexport default class DashAgGrid extends Component {\n    render() {\n        return (\n            <Suspense fallback={null}>\n                <RealAgGrid {...this.props} />\n            </Suspense>\n        );\n    }\n}\n\nDashAgGrid.defaultProps = {\n    style: {height: '400px', width: '100%'},\n    theme: 'alpine',\n    enableResetColumnState: false,\n    enableExportDataAsCsv: false,\n    persisted_props: ['selectionChanged'],\n    persistence_type: 'local',\n};\nDashAgGrid.propTypes = {\n    /********************************\n     * DASH PROPS\n     *******************************/\n\n    /**\n     * The ID used to identify this component in Dash callbacks.\n     */\n    id: PropTypes.string,\n\n    /**\n     * Dash-assigned callback that gets fired when the input changes\n     */\n    setProps: PropTypes.func,\n\n    /**\n     * The children of this component\n     */\n    children: PropTypes.node,\n\n    /**\n     * The CSS style for the component\n     */\n    style: PropTypes.object,\n\n    /**\n     * Used to allow user interactions in this component to be persisted when\n     * the component - or the page - is refreshed. If `persisted` is truthy and\n     * hasn't changed from its previous value, a `value` that the user has\n     * changed while using the app will keep that change, as long as\n     * the new `value` also matches what was given originally.\n     * Used in conjunction with `persistence_type`.\n     */\n    persistence: PropTypes.oneOfType([\n        PropTypes.bool,\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n\n    /**\n     * Properties whose user interactions will persist after refreshing the\n     * component or the page. Since only `value` is allowed this prop can\n     * normally be ignored.\n     */\n    persisted_props: PropTypes.arrayOf(PropTypes.string),\n\n    /**\n     * Where persisted user changes will be stored:\n     * memory: only kept in memory, reset on page refresh.\n     * local: window.localStorage, data is kept after the browser quit.\n     * session: window.sessionStorage, data is cleared once the browser quit.\n     */\n    persistence_type: PropTypes.oneOf(['local', 'session', 'memory']),\n\n    /********************************\n     * CUSTOM PROPS\n     *******************************/\n\n    /**\n     * If true, the internal method resetColumnState() will be called\n     */\n    enableResetColumnState: PropTypes.bool,\n\n    /**\n     * If true, the internal method exportDataAsCsv() will be called\n     */\n    enableExportDataAsCsv: PropTypes.bool,\n\n    /**\n     * Object with properties to pass to the exportDataAsCsv() method\n     */\n    csvExportParams: PropTypes.shape({\n        /**\n         * Delimiter to insert between cell values.\n         */\n        columnSeparator: PropTypes.string,\n\n        /**\n         * Pass true to insert the value into the CSV file without escaping. In this case it is your responsibility to ensure that no cells contain the columnSeparator character.\n         */\n        suppressQuotes: PropTypes.bool,\n\n        /**\n         * Content to put at the top of the file export. A 2D array of CsvCell objects.\n         */\n        prependContent: PropTypes.string,\n\n        /**\n         * Content to put at the bottom of the file export.\n         */\n        appendContent: PropTypes.string,\n\n        /**\n         * If true, all columns will be exported in the order they appear in the columnDefs.\n         */\n        allColumns: PropTypes.bool,\n\n        /**\n         * Provide a list (an array) of column keys or Column objects if you want to export specific columns.\n         */\n        columnKeys: PropTypes.arrayOf(PropTypes.string),\n\n        /**\n         * String to use as the file name\n         */\n        fileName: PropTypes.string,\n\n        /**\n         * Export only selected rows.\n         */\n        onlySelected: PropTypes.bool,\n\n        /**\n         * Only export selected rows including other pages (only makes sense when using pagination).\n         */\n        onlySelectedAllPages: PropTypes.bool,\n\n        /**\n         * Set to true to skip include header column groups.\n         */\n        skipColumnGroupHeaders: PropTypes.bool,\n\n        /**\n         * Set to true if you don't want to export column headers.\n         */\n        skipColumnHeaders: PropTypes.bool,\n\n        /**\n         * Set to true to skip row group headers if grouping rows. Only relevant when grouping rows.\n         */\n        skipRowGroups: PropTypes.bool,\n\n        /**\n         * Set to true to suppress exporting rows pinned to the top of the grid.\n         */\n        skipPinnedTop: PropTypes.bool,\n\n        /**\n         * Set to true to suppress exporting rows pinned to the bottom of the grid.\n         */\n        skipPinnedBottom: PropTypes.bool,\n    }),\n\n    /**\n     * Size the columns automatically or to fit their contents\n     */\n    columnSize: PropTypes.oneOf(['sizeToFit', 'autoSizeAll']),\n\n    /**\n     * The ag-grid provided theme to use. More info here: https://www.ag-grid.com/javascript-grid/themes-provided/\n     */\n    theme: PropTypes.oneOf(['alpine', 'balham', 'material', 'bootstrap']),\n\n    /**\n     * Object used to perform the cell styling. See AG-Grid Cell Style.\n     */\n    cellStyle: PropTypes.shape({\n        styleConditions: PropTypes.arrayOf(\n            PropTypes.shape({\n                condition: PropTypes.string.isRequired,\n                style: PropTypes.object.isRequired,\n            })\n        ),\n        defaultStyle: PropTypes.object,\n    }),\n\n    /**\n     * Infinite Scroll, Datasource interface\n     * See https://www.ag-grid.com/react-grid/infinite-scrolling/#datasource-interface\n     */\n    getRowsRequest: PropTypes.shape({\n        /**\n         * The first row index to get.\n         */\n        startRow: PropTypes.number,\n\n        /**\n         * The first row index to NOT get.\n         */\n        endRow: PropTypes.number,\n\n        /**\n         * If sorting, what the sort model is\n         */\n        sortModel: PropTypes.any,\n\n        /**\n         * If filtering, what the filter model is\n         */\n        filterModel: PropTypes.any,\n\n        /**\n         * The grid context object\n         */\n        context: PropTypes.any,\n\n        /**\n         * Callback to call when the request is successful.\n         */\n        successCallback: PropTypes.func,\n\n        /**\n         * Callback to call when the request fails.\n         */\n        failCallback: PropTypes.func,\n    }),\n\n    /**\n     * Request from Dash AgGrid when suppressCallback is disabled and a user opens a row with a detail grid\n     */\n    getDetailRequest: PropTypes.shape({\n        /**\n         * Details about the row that was opened.\n         */\n        data: PropTypes.any,\n        /**\n         * Datetime representing when the grid was requested.\n         */\n        requestTime: PropTypes.any,\n    }),\n\n    /**\n     * RowData to populate the detail grid when callbacks are used to populate\n     */\n    getDetailResponse: PropTypes.any,\n\n    /**\n     * Special prop used by renderers.\n     */\n    clickData: PropTypes.any,\n\n    /**\n     * Special prop used by renderers.\n     */\n    hoverData: PropTypes.any,\n\n    /**\n     * Serverside model data response object.\n     * See https://www.ag-grid.com/react-grid/server-side-model-datasource/\n     */\n    getRowsResponse: PropTypes.shape({\n        /**\n         * Data retreived from the server\n         */\n        rowData: PropTypes.arrayOf(PropTypes.any),\n\n        /**\n         * Current row count, if known\n         */\n        rowCount: PropTypes.number,\n\n        /**\n         * Any extra info for the grid to associate with this load\n         */\n        storeInfo: PropTypes.any,\n    }),\n\n    /**\n     * License key for ag-grid enterprise. If using Enterprise modules,\n     * enableEnterpriseModules must also be true.\n     */\n    licenseKey: PropTypes.string,\n\n    /**\n     * If True, enable ag-grid Enterprise modules. Recommended to use with licenseKey.\n     */\n    enableEnterpriseModules: PropTypes.bool,\n\n    /**\n     * The rowData in the grid after inline filters are applied.\n     */\n    virtualRowData: PropTypes.any,\n\n    /********************************\n     * GRID PROPS\n     *******************************/\n\n    /**\n     * Array of Column Definitions.\n     */\n    columnDefs: PropTypes.any,\n\n    /**\n     * A default column definition.\n     */\n    defaultColDef: PropTypes.any,\n\n    /**\n     * A default column group definition. All column group definitions will use these\n     * properties. Items defined in the actual column group  definition get precedence.\n     */\n    defaultColGroupDef: PropTypes.any,\n\n    /**\n     * An object map of custom column types which contain groups of properties that column\n     * definitions can inherit.\n     */\n    columnTypes: PropTypes.any,\n\n    /**\n     * Set to 'shift' to have shift-resize as the default resize operation (same as user\n     * holding down Shift while resizing).\n     */\n    colResizeDefault: PropTypes.any,\n\n    /**\n     * Suppresses auto-sizing columns for columns. In other words, double clicking a\n     * column's header's edge will not auto-size.\n     * Default Value: false\n     */\n    suppressAutoSize: PropTypes.bool,\n\n    /**\n     * Number of pixels to add to a column width after the auto-sizing calculation. Set\n     * this if you want to add extra room to accommodate (for example) sort icons, or\n     * some other dynamic nature of the header.\n     * Default Value: 4\n     */\n    autoSizePadding: PropTypes.number,\n\n    /**\n     * Set this to true to skip the headerName when autoSize is called by default. See\n     * Resizing Example.\n     * Default Value: false\n     */\n    skipHeaderOnAutoSize: PropTypes.bool,\n\n    /**\n     * If true, the ag-column-moving class is not added to the grid while columns are\n     * moving. In the default themes, this results in no animation when moving columns.\n     * Default Value: false\n     */\n    suppressColumnMoveAnimation: PropTypes.bool,\n\n    /**\n     * Set to true to suppress column moving, i.e. to make the columns fixed position.\n     * Default Value: false\n     */\n    suppressMovableColumns: PropTypes.bool,\n\n    /**\n     * If true, then dots in field names (e.g. address.firstline) are not treated as\n     * deep references. Allows you to use dots in your field name if you prefer.\n     * Default Value: false\n     */\n    suppressFieldDotNotation: PropTypes.bool,\n\n    /**\n     * Set to true to show the 'no sort' icon. See Example Custom Sorting.\n     * Default Value: false\n     */\n    unSortIcon: PropTypes.bool,\n\n    /**\n     * Set to true to suppress multi-sort when the user shift-clicks a column header.\n     * Default Value: false\n     */\n    suppressMultiSort: PropTypes.bool,\n\n    /**\n     * Set to true to always show the column menu button, rather than only showing when\n     * the mouse is over the column header.\n     * Default Value: false\n     */\n    suppressMenuHide: PropTypes.bool,\n\n    /**\n     * Allows specifying the group 'auto column' if you are not happy with the default.\n     * If grouping, this column def is included as the first column definition in the\n     * grid. If not grouping, this column is not included.\n     */\n    autoGroupColumnDef: PropTypes.any,\n\n    /**\n     * Allow reordering and pinning columns by dragging columns from the columns tool\n     * panel to the grid.\n     * Default Value: false\n     */\n    allowDragFromColumnsToolPanel: PropTypes.bool,\n\n    /**\n     * Sorts the grid columns in the order of Column Definitions after Column Definitions\n     * are updated. See Apply Column Order.\n     * Default Value: false\n     */\n    applyColumnDefOrder: PropTypes.bool,\n\n    /**\n     * Rows are filtered using this text as a quick filter.\n     */\n    quickFilterText: PropTypes.any,\n\n    /**\n     * Set to true to turn on the  quick filter cache, used for a performance gain when\n     * using the quick filter.\n     * Default Value: false\n     */\n    cacheQuickFilter: PropTypes.bool,\n\n    /**\n     * Array defining the order in which sorting occurs (if sorting is enabled). Values\n     * can be 'asc', 'desc' or null. For example: sortingOrder: ['asc', 'desc']. See\n     * Example Sorting Order and Animation.\n     */\n    sortingOrder: PropTypes.any,\n\n    /**\n     * Set to true to specify that the sort should take into account accented characters.\n     * If this feature is turned on the sort will perform slower. See Accented Sort.\n     * Default Value: false\n     */\n    accentedSort: PropTypes.bool,\n\n    /**\n     * Set to 'ctrl' to have multi sorting work using the Ctrl or Command (for Apple)\n     * keys. See Multi Column Sorting.\n     */\n    multiSortKey: PropTypes.any,\n\n    /**\n     * Set to true to suppress sorting of un-sorted data to match original row data.\n     * See Big Data Small Transactions.\n     * Default Value: false\n     */\n    suppressMaintainUnsortedOrder: PropTypes.bool,\n\n    /**\n     * Set to true to override the default tree data filtering behaviour to instead exclude\n     * child nodes from filter results. See Tree Data Filtering.\n     * Default Value: false\n     */\n    excludeChildrenWhenTreeDataFiltering: PropTypes.bool,\n\n    /**\n     * Type of Row Selection.\n     */\n    rowSelection: PropTypes.any,\n\n    /**\n     * Set to true to allow multiple rows to be selected using single click. See Multi\n     * Select Single Click.\n     * Default Value: false\n     */\n    rowMultiSelectWithClick: PropTypes.bool,\n\n    /**\n     * If true then rows will not be deselected if you hold down Ctrl and click the row\n     * or press Space.\n     * Default Value: false\n     */\n    suppressRowDeselection: PropTypes.bool,\n\n    /**\n     * If true, row selection won't happen when rows are clicked. Use when you want checkbox\n     * selection exclusively.\n     * Default Value: false\n     */\n    suppressRowClickSelection: PropTypes.bool,\n\n    /**\n     * If true, cells won't be selectable. This means cells will not get keyboard focus\n     * when you click on them.\n     * Default Value: false\n     */\n    suppressCellSelection: PropTypes.bool,\n\n    /**\n     * Set to true to enable Range Selection.\n     * Default Value: false\n     */\n    enableRangeSelection: PropTypes.bool,\n\n    /**\n     * Set to true to enable Range Handle\n     * Default Value: false\n     */\n    enableRangeHandle: PropTypes.bool,\n\n    /**\n     * Set to true to enable Fill Handle\n     * Default Value: false\n     */\n    enableFillHandle: PropTypes.bool,\n\n    /**\n     * Set to 'x' to force the fill handle direction to horizontal, or set it to 'y'\n     * to force the fill handle direction to vertical\n     * Default Value: xy\n     */\n    fillHandleDirection: PropTypes.string,\n\n    /**\n     * Set it to true to prevent cell values from being cleared when the Range Selection\n     * is reduced by the Fill Handle.\n     * Default Value: false\n     */\n    suppressClearOnFillReduction: PropTypes.bool,\n\n    /**\n     * Set to true to enable Managed Row Dragging.\n     * Default Value: false\n     */\n    rowDragManaged: PropTypes.bool,\n\n    /**\n     * Set to true to suppress Row Dragging.\n     * Default Value: false\n     */\n    suppressRowDrag: PropTypes.bool,\n\n    /**\n     * Set to true to suppress moving rows while dragging the rowDrag waffle. This option\n     * highlights the position where the row will be placed and it will only move the\n     * row on mouse up. See Row Dragging.\n     * Default Value: false\n     */\n    suppressMoveWhenRowDragging: PropTypes.bool,\n\n    /**\n     * Set to true to enable Single Click Editing for cells, to start editing with a\n     * single click.\n     * Default Value: false\n     */\n    singleClickEdit: PropTypes.bool,\n\n    /**\n     * Set to true so that neither single nor double click starts editing. See Single\n     * Click, Double Click, No Click Editing.\n     * Default Value: false\n     */\n    suppressClickEdit: PropTypes.bool,\n\n    /**\n     * Set to 'fullRow' to enable Full Row Editing. Otherwise leave blank to edit one\n     * cell at a time.\n     */\n    editType: PropTypes.any,\n\n    /**\n     * Set to true to have cells flash after data changes. See Flashing Data Changes.\n     * Default Value: false\n     */\n    enableCellChangeFlash: PropTypes.bool,\n\n    /**\n     * To be used in combination with enableCellChangeFlash, this configuration will\n     * set delay in ms of how long a cell should remain in its \"flashed\n     * Default Value: 500\n     */\n    cellFlashDelay: PropTypes.number,\n\n    /**\n     * To be used in combination with enableCellChangeFlash, this configuration will\n     * set delay in ms of how long the \"flashed\n     * Default Value: 1000\n     */\n    cellFadeDelay: PropTypes.number,\n\n    /**\n     * Set to true to have cells flash after data changes even when the change is due\n     * to filtering. See Flashing Data Changes.\n     * Default Value: false\n     */\n    allowShowChangeAfterFilter: PropTypes.bool,\n\n    /**\n     * Set this to true to  stop cell editing when grid loses focus. The default is the\n     * grid stays editing until focus goes onto another cell. For inline (non-popup)\n     * editors only.\n     * Default Value: false\n     */\n    stopEditingWhenGridLosesFocus: PropTypes.bool,\n\n    /**\n     * Set both properties to true to have Excel-style behaviour for the Enter key, i.e.\n     * enter key moves down.\n     * Default Value: false\n     */\n    enterMovesDown: PropTypes.bool,\n\n    /**\n     * The height in pixels for the row containing the column label header. See Header\n     * Height.\n     * Default Value: 25\n     */\n    headerHeight: PropTypes.number,\n\n    /**\n     * The height for the rows containing header column groups. If not specified, it\n     * uses headerHeight. See Header Height.\n     */\n    groupHeaderHeight: PropTypes.any,\n\n    /**\n     * The height for the row containing the floating filters. See Header Height.\n     * Default Value: 20\n     */\n    floatingFiltersHeight: PropTypes.number,\n\n    /**\n     * The height for the row containing the columns when in pivot mode. If not specified,\n     * it uses headerHeight. See Header Height.\n     */\n    pivotHeaderHeight: PropTypes.any,\n\n    /**\n     * The height for the row containing header column groups when in pivot mode. If\n     * not specified, it uses groupHeaderHeight. See Header Height.\n     */\n    pivotGroupHeaderHeight: PropTypes.any,\n\n    /**\n     * Used when grouping. If true, a group row will span all columns across the entire\n     * width of the table. If false, the cells will be rendered as normal and you will\n     * have the opportunity to include a grouping column (normally the first on the left)\n     * to show the group. See Full Width Group Rows.\n     * Default Value: false\n     */\n    groupUseEntireRow: PropTypes.bool,\n\n    /**\n     * If grouping, set to the number of levels to expand by default, e.g. 0 for none,\n     * 1 for first level only, etc. Set to -1 to expand everything. See Removing Single\n     * Children.\n     * Default Value: 0\n     */\n    groupDefaultExpanded: PropTypes.number,\n\n    /**\n     * If true, the grid will not swap in the grouping column when grouping is enabled.\n     * Use this if you want complete control on the column displayed and don't want the\n     * grid's help, in other words if you already have a column in your column definitions\n     * that is responsible for displaying the groups. See Configuring the Auto Group\n     * Column.\n     * Default Value: false\n     */\n    groupSuppressAutoColumn: PropTypes.bool,\n\n    /**\n     * If using auto column, set to true to have each group in its own separate column,\n     * e.g. if grouping by Country then Year, two auto columns will be created, one for\n     * Country and one for Year. See Multi Auto Column Group.\n     * Default Value: false\n     */\n    groupMultiAutoColumn: PropTypes.bool,\n\n    /**\n     * When true, if you select a group, the children of the group will also be selected.\n     * See Group Selection.\n     * Default Value: false\n     */\n    groupSelectsChildren: PropTypes.bool,\n\n    /**\n     * If grouping, whether to show a group footer when the group is expanded. If true,\n     * then by default,  the footer will contain aggregate data (if any) when shown and\n     * the header will be blank. When closed, the header will contain  the aggregate\n     * data regardless of this setting (as the footer is hidden anyway). This is handy\n     * for 'total' rows, that are  displayed below the data when the group is open, and\n     * alongside the group when it is closed See Grouping Footers.\n     * Default Value: false\n     */\n    groupIncludeFooter: PropTypes.bool,\n\n    /**\n     * Set to true to show a 'grand' total group footer across all groups. See Grouping\n     * Footers.\n     * Default Value: false\n     */\n    groupIncludeTotalFooter: PropTypes.bool,\n\n    /**\n     * If true, and showing footer, aggregate data will be displayed at both the header\n     * and footer levels always. This  stops the possibly undesirable behaviour of the\n     * header details 'jumping' to the footer on expand.\n     * Default Value: false\n     */\n    groupSuppressBlankHeader: PropTypes.bool,\n\n    /**\n     * If using groupSelectsChildren, then only the children that pass the current filter\n     * will get selected. See Group Selection.\n     * Default Value: false\n     */\n    groupSelectsFiltered: PropTypes.bool,\n\n    /**\n     * Shows the open group in the group column for non-group rows. See Showing Open\n     * Groups.\n     * Default Value: false\n     */\n    showOpenedGroup: PropTypes.bool,\n\n    /**\n     * Set to true to collapse groups that only have one child. See Remove Single Children.\n     * Default Value: false\n     */\n    groupRemoveSingleChildren: PropTypes.bool,\n\n    /**\n     * Set to true to collapse lowest level groups that only have one child. See Remove\n     * Single Children.\n     * Default Value: false\n     */\n    groupRemoveLowestSingleChildren: PropTypes.bool,\n\n    /**\n     * Set to true to hide parents that are open. When used with multiple columns for\n     * showing groups, it can give a more pleasing user experience. See Group Hide Open\n     * Parents.\n     * Default Value: false\n     */\n    groupHideOpenParents: PropTypes.bool,\n\n    /**\n     * When to show the 'row group panel' (where you drag rows to group) at the top.\n     * See Column Tool Panel Example.\n     * Default Value: ['never', 'always', 'onlyWhenGrouping']\n     */\n    rowGroupPanelShow: PropTypes.oneOf(['never', 'always', 'onlyWhenGrouping']),\n\n    /**\n     * Set to true to enable pivot mode. See Pivoting.\n     * Default Value: false\n     */\n    pivotMode: PropTypes.bool,\n\n    /**\n     * When to show the 'pivot panel' (where you drag rows to pivot) at the top. Note\n     * that the pivot panel will never show if pivotMode is off.\n     * Default Value: ['never', 'always', 'onlyWhenPivoting']\n     */\n    pivotPanelShow: PropTypes.oneOf(['never', 'always', 'onlyWhenPivoting']),\n\n    /**\n     * When true, column headers won't include the aggFunc, e.g. 'sum(Bank Balance)'\n     * will just be 'Bank Balance'.\n     * Default Value: false\n     */\n    suppressAggFuncInHeader: PropTypes.bool,\n\n    /**\n     * When true, the aggregations won't be computed for root node of the grid. See Big\n     * Data Small Transactions.\n     * Default Value: false\n     */\n    suppressAggAtRootLevel: PropTypes.bool,\n\n    /**\n     * When using change detection, only the updated column with get re-aggregated.\n     * Default Value: false\n     */\n    aggregateOnlyChangedColumns: PropTypes.bool,\n\n    /**\n     * If true, then row group, pivot and value aggregation will be read-only from the\n     * GUI. The grid will display what values are used for each, but will not allow the\n     * user to change the selection. See Read Only Functions.\n     * Default Value: false\n     */\n    functionsReadOnly: PropTypes.bool,\n\n    /**\n     * A map of 'function name' to 'function' for custom aggregation functions. See Custom\n     * Aggregation Functions.\n     */\n    aggFuncs: PropTypes.any,\n\n    /**\n     * Set to true so that aggregations are not impacted by filtering. See Custom Aggregation\n     * Functions.\n     */\n    suppressAggFilteredOnly: PropTypes.any,\n\n    /**\n     * By default, when a column is un-grouped it is made visible. e.g. on main demo:\n     * 1) group by country by dragging (action of moving column out of grid means column\n     * is made visible=false); then 2) un-group by clicking 'x' on the country column\n     * in the column drop zone; the column is then made visible=true. This property stops\n     * the column becoming visible again when un-grouping.\n     * Default Value: false\n     */\n    suppressMakeVisibleAfterUnGroup: PropTypes.bool,\n\n    /**\n     * When set and the grid is in pivot mode, automatically calculated totals will appear\n     * within the Pivot Column Groups,in the position specified. See Pivot Column Group\n     * Totals.\n     */\n    pivotColumnGroupTotals: PropTypes.any,\n\n    /**\n     * When set and the grid is in pivot mode, automatically calculated totals will appear\n     * for each value column in the position specified. See Pivot Row Totals.\n     */\n    pivotRowTotals: PropTypes.any,\n\n    /**\n     * When enabled pivot column groups will appear 'fixed', without the ability to expand\n     * and collapse the column groups. See Fixed Pivot Column Groups.\n     * Default Value: false\n     */\n    suppressExpandablePivotGroups: PropTypes.bool,\n\n    /**\n     * If true, the grid will not swap in the grouping column when pivoting. Useful if\n     * pivoting using Server Side Row Model or Viewport Row Model and you want full control\n     * of all columns including the group column.\n     * Default Value: false\n     */\n    pivotSuppressAutoColumn: PropTypes.bool,\n\n    /**\n     * Sets the Row Model type.\n     * Default Value: ['clientSide', 'infinite', 'viewport', 'serverSide']\n     */\n    rowModelType: PropTypes.oneOf([\n        'clientSide',\n        'infinite',\n        'viewport',\n        'serverSide',\n    ]),\n\n    /**\n     * (Client-Side Row Model only) Set the data to be displayed as rows in the grid.\n     */\n    rowData: PropTypes.any,\n\n    /**\n     * (Client-Side Row Model only) Enables Immutable Data mode, for compatibility with\n     * immutable stores.\n     */\n    immutableData: PropTypes.any,\n\n    /**\n     * ( only) Prevents Transactions changing sort, filter, group or pivot state when\n     * transaction only contains updates.\n     */\n    suppressModelUpdateAfterUpdateTransaction: PropTypes.any,\n\n    /**\n     * Data to be displayed as Pinned Top Rows in the grid.\n     */\n    pinnedTopRowData: PropTypes.any,\n\n    /**\n     * Data to be displayed as Pinned Bottom Rows in the grid.\n     */\n    pinnedBottomRowData: PropTypes.any,\n\n    /**\n     * Whether to use Full Store or Partial Store for storing rows. See Row Stores\n     * Default Value: ['full', 'partial']\n     */\n    serverSideStoreType: PropTypes.oneOf(['full', 'partial']),\n\n    /**\n     * Partial Store Only - How many rows for each block in the store, i.e. how many\n     * rows returned from the server at a time.\n     * Default Value: 100\n     */\n    cacheBlockSize: PropTypes.number,\n\n    /**\n     * Quantity of extra blank rows to display to the user at the end of the dataset,\n     * which sets the vertical scroll and then allows the grid to request viewing more rows of data.\n     * default is 1, ie show 1 row.\n     */\n    cacheOverflowSize: PropTypes.number,\n\n    /**\n     * Partial Store Only - how many blocks to keep in the store. Default is no limit,\n     * so every requested block is kept. Use this if you have memory concerns, and blocks\n     * that were least recently viewed will be purged when the limit is hit. The grid\n     * will additionally make sure it has all the blocks needed to display what is currently\n     * visible - in case this property is set to low.\n     */\n    maxBlocksInCache: PropTypes.any,\n\n    /**\n     * How many requests to hit the server with concurrently. If the max is reached,\n     * requests are queued.\n     * Default Value: 1\n     */\n    maxConcurrentDatasourceRequests: PropTypes.number,\n\n    /**\n     * How many milliseconds to wait before loading a block. Useful when scrolling over\n     * many rows, spanning many Partial Store blocks, as it prevents blocks loading until\n     * scrolling has settled.\n     */\n    blockLoadDebounceMillis: PropTypes.any,\n\n    /**\n     * When enabled, closing group rows will remove children of that row. Next time the\n     * row is opened, child rows will be read form the datasoruce again. This property\n     * only applies when there is Row Grouping.\n     */\n    purgeClosedRowNodes: PropTypes.any,\n\n    /**\n     * When enabled, always refreshes stores after filter has changed. Use by Full Store\n     * only, to allow Server-Side Filtering.\n     */\n    serverSideFilteringAlwaysResets: PropTypes.any,\n\n    /**\n     * When using viewport row model, sets the pages size for the viewport.\n     */\n    viewportRowModelPageSize: PropTypes.any,\n\n    /**\n     * When using viewport row model, sets the buffer size for the viewport.\n     */\n    viewportRowModelBufferSize: PropTypes.any,\n\n    /**\n     * To use the viewport row model you provide the grid with a viewportDatasource.\n     * See Viewport.\n     */\n    viewportDatasource: PropTypes.any,\n\n    /**\n     * Set to true to always show the horizontal scrollbar.\n     * Default Value: false\n     */\n    alwaysShowHorizontalScroll: PropTypes.bool,\n\n    /**\n     * Set to true to always show the vertical scrollbar.\n     * Default Value: false\n     */\n    alwaysShowVerticalScroll: PropTypes.bool,\n\n    /**\n     * Set to true to debounce the vertical scrollbar. Can provide smoother scrolling\n     * on older browsers, eg IE.\n     * Default Value: false\n     */\n    debounceVerticalScrollbar: PropTypes.bool,\n\n    /**\n     * Set to true to never show the horizontal scroll. This is useful if the grid is\n     * aligned with another grid and will scroll when the other grid scrolls. (Show not\n     * be used in combination with alwaysShowHorizontalScroll) See Aligned Grid as Footer.\n     * Default Value: false\n     */\n    suppressHorizontalScroll: PropTypes.bool,\n\n    /**\n     * Set to true so that the grid doesn't virtualise the columns. For example, if you\n     * have 100 columns, but only 10 visible due to scrolling, all 100 will always be\n     * rendered.\n     * Default Value: false\n     */\n    suppressColumnVirtualisation: PropTypes.bool,\n\n    /**\n     * There is no such property as suppressRowVirtualisation - if you want to do this,\n     * then set the rowBuffer property to be very large, e.g. 9999. Warning: lots of\n     * rendered rows will mean a very large amount of rendering in the DOM which will\n     * slow things down.\n     */\n    suppressRowVirtualisation: PropTypes.any,\n\n    /**\n     * By default the grid has a limit of rendering a maximum of 500 rows at once (remember\n     * the grid only renders rows you can see, so unless your display shows more than\n     * 500 rows without vertically scrolling this will never be an issue).\n     * Default Value: false\n     */\n    suppressMaxRenderedRowRestriction: PropTypes.bool,\n\n    /**\n     * When true, the grid will not scroll to the top when new row data is provided.\n     * Use this if you don't want the default behaviour of scrolling to the top every\n     * time you load new data.\n     * Default Value: false\n     */\n    suppressScrollOnNewData: PropTypes.bool,\n\n    /**\n     * When true, the grid will not use animation frames when drawing rows while scrolling.\n     * Use this if the grid is working fast enough that you don't need animation frames\n     * and you don't want the grid to flicker.\n     * Default Value: false\n     */\n    suppressAnimationFrame: PropTypes.bool,\n\n    /**\n     * Set whether Pagination is enabled.\n     * Default Value: false\n     */\n    pagination: PropTypes.bool,\n\n    /**\n     * How many rows to load per page. If paginationAutoPageSize is specified, this property\n     * is ignored. See Customising Pagination.\n     * Default Value: 100\n     */\n    paginationPageSize: PropTypes.number,\n\n    /**\n     * Set to true so that the number of rows to load per page is automatically adjusted\n     * by AG Grid so each page shows enough rows to just fill the area designated for\n     * the grid. If false, paginationPageSize is used. See Auto Page Size.\n     * Default Value: false\n     */\n    paginationAutoPageSize: PropTypes.bool,\n\n    /**\n     * If true, the default AG Grid controls for navigation are hidden. This is useful\n     * if pagination=true and you want to provide your own pagination controls. Otherwise,\n     * when pagination=true the grid automatically shows the necessary controls at the\n     * bottom so that the user can navigate through the different pages. See Custom Pagination\n     * Controls.\n     * Default Value: false\n     */\n    suppressPaginationPanel: PropTypes.bool,\n\n    /**\n     * Set to true to have pages split children of groups when using Row Grouping or\n     * detail rows with Master Detail. See Pagination & Child Rows.\n     */\n    paginateChildRows: PropTypes.any,\n\n    /**\n     * Sets the Cell Renderer to use when groupUseEntireRow=true. See Row Grouping.\n     */\n    groupRowRenderer: PropTypes.any,\n\n    /**\n     * Sets the inner Cell Renderer to use when groupUseEntireRow=true. See Row Grouping.\n     */\n    groupRowInnerRenderer: PropTypes.any,\n\n    /**\n     * Sets the Cell Renderer to use for Full Width Rows.\n     */\n    fullWidthCellRenderer: PropTypes.any,\n\n    /**\n     * Used to enable Master Detail. See Enabling Master Detail.\n     * Default Value: false\n     */\n    masterDetail: PropTypes.bool,\n\n    /**\n     * Specifies the params to be used by the default detail Cell Renderer. See Detail\n     * Grids.\n     */\n    detailCellRendererParams: PropTypes.shape({\n        /**\n         * Grid options for detail grid in master-detail view.\n         */\n        detailGridOptions: PropTypes.any,\n\n        /**\n         * Column name where detail grid data is located in main dataset, for master-detail view.\n         */\n        detailColName: PropTypes.string,\n\n        /**\n         * Default: true. If true, suppresses the Dash callback in favor of using the data embedded in rowData at the given detailColName.\n         */\n        suppressCallback: PropTypes.bool,\n    }),\n\n    /**\n     * Set to true to keep detail rows for when they are displayed again.\n     * Default Value: false\n     */\n    keepDetailRows: PropTypes.bool,\n\n    /**\n     * Sets the number of details rows to keep.\n     * Default Value: 10\n     */\n    keepDetailRowsCount: PropTypes.number,\n\n    /**\n     * Set fixed height in pixels for each detail row.\n     */\n    detailRowHeight: PropTypes.number,\n\n    /**\n     * Set detail row height automatically based on contents.\n     */\n    detailRowAutoHeight: PropTypes.bool,\n\n    /**\n     * Icons to use inside the grid instead of the grid's default icons.\n     */\n    icons: PropTypes.any,\n\n    /**\n     * Default Row Height in pixels.\n     * Default Value: 25\n     */\n    rowHeight: PropTypes.number,\n\n    /**\n     * Set to true to enable Row Animation.\n     * Default Value: false\n     */\n    animateRows: PropTypes.bool,\n\n    /**\n     * The style to give a particular row. See Row Style.\n     */\n    rowStyle: PropTypes.any,\n\n    /**\n     * The class to give a particular row. See Row Class.\n     */\n    rowClass: PropTypes.any,\n\n    /**\n     * Rules which can be applied to include certain CSS classes. See Row Class Rules.\n     */\n    rowClassRules: PropTypes.any,\n\n    /**\n     * The list of Excel styles to be used when exporting to Excel\n     */\n    excelStyles: PropTypes.any,\n\n    /**\n     * Tell the grid how wide the scrollbar is, which is used in grid width calculations.\n     * Set only if using non-standard browser-provided scrollbars, so the grid can use\n     * the non-standard size in its calculations.\n     */\n    scrollbarWidth: PropTypes.any,\n\n    /**\n     * Set to true to not highlight rows by adding the ag-row-hover CSS class.\n     * Default Value: false\n     */\n    suppressRowHoverHighlight: PropTypes.bool,\n\n    /**\n     * Set to true to only have the range selection, and not row selection, copied to\n     * clipboard.\n     * Default Value: false\n     */\n    suppressCopyRowsToClipboard: PropTypes.bool,\n\n    /**\n     * Set to true to also include headers when copying to clipboard using Ctrl + C clipboard.\n     * Default Value: false\n     */\n    copyHeadersToClipboard: PropTypes.bool,\n\n    /**\n     * Specify the deliminator to use when copying to clipboard.\n     */\n    clipboardDeliminator: PropTypes.any,\n\n    /**\n     * Set to true to not set focus back on the grid after a refresh. This can avoid\n     * issues where you want to keep the focus on another part of the browser.\n     * Default Value: false\n     */\n    suppressFocusAfterRefresh: PropTypes.bool,\n\n    /**\n     * Set to true to work around a bug with Excel (Windows) that adds an extra empty\n     * line at the end of ranges copied to the clipboard.\n     * Default Value: false\n     */\n    suppressLastEmptyLineOnPaste: PropTypes.bool,\n\n    /**\n     * Set to true to be able to select the text within cells.\n     * Default Value: false\n     */\n    enableCellTextSelection: PropTypes.bool,\n\n    /**\n     * A map of key->value pairs for localising text within the grid. See Localisation.\n     */\n    localeText: PropTypes.any,\n\n    /**\n     * Disables the 'loading' overlay.\n     * Default Value: false\n     */\n    suppressLoadingOverlay: PropTypes.bool,\n\n    /**\n     * Disables the 'no rows' overlay.\n     * Default Value: false\n     */\n    suppressNoRowsOverlay: PropTypes.bool,\n\n    /**\n     * Provide a template for 'loading' overlay.\n     */\n    overlayLoadingTemplate: PropTypes.any,\n\n    /**\n     * Provide a template for 'no rows' overlay.\n     */\n    overlayNoRowsTemplate: PropTypes.any,\n\n    /**\n     * Provide a custom loading overlay component.\n     */\n    loadingOverlayComponent: PropTypes.any,\n\n    /**\n     * Customise the parameters provided to the loading overlay component.\n     */\n    loadingOverlayComponentParams: PropTypes.any,\n\n    /**\n     * Provide a custom no rows overlay component.\n     */\n    noRowsOverlayComponent: PropTypes.any,\n\n    /**\n     * Customise the parameters provided to the no rows overlay component.\n     */\n    noRowsOverlayComponentParams: PropTypes.any,\n\n    /**\n     * Set to true to Enable Charts.\n     * Default Value: false\n     */\n    enableCharts: PropTypes.bool,\n\n    /**\n     * The list of chart themes to be used, see Chart Themes.\n     * Default Value: ['ag-default', 'ag-material', 'ag-pastel', 'ag-vivid', 'ag-solar']\n     */\n    chartThemes: PropTypes.oneOf([\n        'ag-default',\n        'ag-material',\n        'ag-pastel',\n        'ag-vivid',\n        'ag-solar',\n    ]),\n\n    /**\n     * A map containing custom chart themes, see Custom Chart Themes.\n     */\n    customChartThemes: PropTypes.any,\n\n    /**\n     * Chart theme overrides applied to all themes, see Overriding Existing Themes.\n     */\n    chartThemeOverrides: PropTypes.any,\n\n    /**\n     * A map of component names to plain JavaScript components.\n     */\n    components: PropTypes.any,\n\n    /**\n     * A map of component names to framework (React, Angular etc) components.\n     */\n    frameworkComponents: PropTypes.any,\n\n    /**\n     * DOM element to use as popup parent for grid popups (context menu, column menu\n     * etc).\n     */\n    popupParent: PropTypes.any,\n\n    /**\n     * Set to true to turn on the value cache.\n     * Default Value: false\n     */\n    valueCache: PropTypes.bool,\n\n    /**\n     * Set to true to set value cache to not expire after data updates.\n     * Default Value: false\n     */\n    valueCacheNeverExpires: PropTypes.bool,\n\n    /**\n     * A default configuration object used to export to CSV or Excel.\n     */\n    defaultExportParams: PropTypes.any,\n\n    /**\n     * If true, then middle clicks will result in click events for cell and row. Otherwise\n     * the browser will use middle click to scroll the grid.\n     * Default Value: false\n     */\n    suppressMiddleClickScrolls: PropTypes.bool,\n\n    /**\n     * If true, mouse wheel events will be passed to the browser. Useful if your grid\n     * has no vertical scrolls and you want the mouse to scroll the browser page.\n     * Default Value: false\n     */\n    suppressPreventDefaultOnMouseWheel: PropTypes.bool,\n\n    /**\n     * Set to true to use the browser's default tooltip instead of using AG Grid's Tooltip\n     * Component.\n     * Default Value: false\n     */\n    enableBrowserTooltips: PropTypes.bool,\n\n    /**\n     * The delay in milliseconds that it takes for tooltips to show up once an element\n     * is hovered.\n     * Default Value: 2000\n     */\n    tooltipShowDelay: PropTypes.number,\n\n    /**\n     * Set to true to have tooltips follow the cursor once they are displayed.\n     * Default Value: false\n     */\n    tooltipMouseTrack: PropTypes.bool,\n\n    /**\n     * Set to true to allow cell expressions.\n     * Default Value: false\n     */\n    enableCellExpressions: PropTypes.bool,\n\n    /**\n     * Switch between layout options. See Printing and Auto Height.\n     * Default Value: ['normal', 'autoHeight', 'print']\n     */\n    domLayout: PropTypes.oneOf(['normal', 'autoHeight', 'print']),\n\n    /**\n     * When true, the order of rows and columns in the DOM are consistent with what is\n     * on screen. See Accessibility - Row and Column Order.\n     * Default Value: false\n     */\n    ensureDomOrder: PropTypes.bool,\n\n    /**\n     * The number of rows rendered outside the scrollable viewable area the grid renders.\n     * Having a buffer means the grid will have rows ready to show as the user slowly\n     * scrolls vertically.\n     * Default Value: 20\n     */\n    rowBuffer: PropTypes.number,\n\n    /**\n     * A list of grids to treat as Aligned Grids. If grids are aligned then the columns\n     * and horizontal scrolling will be kept in sync.\n     */\n    alignedGrids: PropTypes.any,\n\n    /**\n     * If true, rowNodes don't get their parents set. The grid doesn't use the parent\n     * reference, but it is included to help the client code navigate the node tree if\n     * it wants by providing bi-direction navigation up and down the tree. If this is\n     * a problem (e.g. if you need to convert the tree to JSON, which does not allow\n     * cyclic dependencies) then set this to true.\n     * Default Value: false\n     */\n    suppressParentsInRowNodes: PropTypes.bool,\n\n    /**\n     * If true, when you drag a column out of the grid (e.g. to the group zone) the column\n     * is not hidden.\n     * Default Value: false\n     */\n    suppressDragLeaveHidesColumns: PropTypes.bool,\n\n    /**\n     * The interval in milliseconds that the grid uses to periodically check its size\n     * and lay itself out again if the size has changed, such as when your browser changes\n     * size, or your application changes the size of the div element that the grid lives\n     * inside. To stop the periodic layout, set it to -1.\n     * Default Value: 500\n     */\n    layoutInterval: PropTypes.number,\n\n    /**\n     * Set to true to operate grid in RTL (Right to Left) mode.\n     * Default Value: false\n     */\n    enableRtl: PropTypes.bool,\n\n    /**\n     * Set this to true to enable debug information from AG Grid and related components.\n     * Will result in additional logging being output, but very useful when investigating\n     * problems.\n     * Default Value: false\n     */\n    debug: PropTypes.bool,\n\n    /**\n     * Provides a context object that is provided to different callbacks the grid uses.\n     * Used for passing additional information to the callbacks by your application.\n     */\n    context: PropTypes.any,\n\n    /**\n     * Set to true to not show context menu. Use if you don't want to use the default\n     * 'right click' context menu.\n     * Default Value: false\n     */\n    suppressContextMenu: PropTypes.bool,\n\n    /**\n     * When using suppressContextMenu, you can use the onCellContextMenu function to\n     * provide your own code to handle cell contextmenu events. This flag is useful to\n     * prevent the browser from showing its default context menu.\n     * Default Value: false\n     */\n    preventDefaultOnContextMenu: PropTypes.bool,\n\n    /**\n     * Allows context menu to show, even when Ctrl key is held down.\n     */\n    allowContextMenuWithControlKey: PropTypes.any,\n\n    /**\n     * Specifies the status bar components to use in the status bar.\n     */\n    statusBar: PropTypes.any,\n\n    /**\n     * Disables touch support (but does not remove the browser's efforts to simulate\n     * mouse events on touch).\n     * Default Value: false\n     */\n    suppressTouch: PropTypes.bool,\n\n    /**\n     * Disables the async nature of the events introduced in v10, and makes them synchronous.\n     * This property is only introduced for the purpose of supporting legacy code which\n     * has a dependency to sync events in earlier versions (v9 or earlier) of AG Grid.\n     * It is strongly recommended that you don't change this property unless you have\n     * legacy issues.\n     * Default Value: false\n     */\n    suppressAsyncEvents: PropTypes.bool,\n\n    /**\n     * Prevents the user from exporting the grid to CSV.\n     * Default Value: false\n     */\n    suppressCsvExport: PropTypes.bool,\n\n    /**\n     * Prevents the user from exporting the grid to Excel.\n     * Default Value: false\n     */\n    suppressExcelExport: PropTypes.bool,\n\n    /**\n     * How many milliseconds to wait before executing a batch of async transactions.\n     */\n    asyncTransactionWaitMillis: PropTypes.any,\n\n    /**\n     * Disables showing a warning message in the console if using a gridOptions or colDef\n     * property that doesn't exist.\n     * Default Value: false\n     */\n    suppressPropertyNamesCheck: PropTypes.bool,\n\n    /**\n     * Uses CSS top instead of CSS transform for positioning rows. Useful if the transform\n     * function is causing issues such as used in row spanning.\n     * Default Value: false\n     */\n    suppressRowTransform: PropTypes.bool,\n\n    /**\n     * When true, a full reset will be performed when sorting using the Server-Side Row\n     * Model.\n     * Default Value: false\n     */\n    serverSideSortingAlwaysResets: PropTypes.bool,\n\n    /**\n     * The grid will check for ResizeObserver and use it if it exists in the browser,\n     * otherwise it will use the grid's alternative implementation. Some users reported\n     * issues with Chrome's ResizeObserver. Use this property to always use the grid's\n     * alternative implementation should such problems exist.\n     * Default Value: false\n     */\n    suppressBrowserResizeObserver: PropTypes.bool,\n\n    /********************************\n     * EVENT PROPS\n     *******************************/\n\n    /**\n     * Cell is clicked.\n     */\n    cellClicked: PropTypes.any,\n\n    /**\n     * Cell is double clicked.\n     */\n    cellDoubleClicked: PropTypes.any,\n\n    /**\n     * Cell is focused.\n     */\n    cellFocused: PropTypes.any,\n\n    /**\n     * Mouse entered cell.\n     */\n    cellMouseOver: PropTypes.any,\n\n    /**\n     * Mouse left cell.\n     */\n    cellMouseOut: PropTypes.any,\n\n    /**\n     * Mouse down on cell.\n     */\n    cellMouseDown: PropTypes.any,\n\n    /**\n     * Row is clicked.\n     */\n    rowClicked: PropTypes.any,\n\n    /**\n     * Row is double clicked.\n     */\n    rowDoubleClicked: PropTypes.any,\n\n    /**\n     * Row is selected or deselected.\n     */\n    rowSelected: PropTypes.any,\n\n    /**\n     * Row selection is changed. Use the grid API to get the new row selected.\n     */\n    selectionChanged: PropTypes.any,\n\n    /**\n     * Cell is right clicked.\n     */\n    cellContextMenu: PropTypes.any,\n\n    /**\n     * A change to range selection has occurred.\n     */\n    rangeSelectionChanged: PropTypes.any,\n\n    /**\n     * Value has changed after editing.\n     */\n    cellValueChanged: PropTypes.any,\n\n    /**\n     * A cell's value within a row has changed. This event corresponds to Full Row Editing\n     * only.\n     */\n    rowValueChanged: PropTypes.any,\n\n    /**\n     * Editing a cell has started.\n     */\n    cellEditingStarted: PropTypes.any,\n\n    /**\n     * Editing a cell has stopped.\n     */\n    cellEditingStopped: PropTypes.any,\n\n    /**\n     * Editing a row has started (when row editing is enabled). When row editing, this\n     * event will be fired once and cellEditingStarted will be fired for each individual\n     * cell. This event corresponds to Full Row Editing only.\n     */\n    rowEditingStarted: PropTypes.any,\n\n    /**\n     * Editing a row has stopped (when row editing is enabled). When row editing, this\n     * event will be fired once and cellEditingStopped will be fired for each individual\n     * cell. This event corresponds to Full Row Editing only.\n     */\n    rowEditingStopped: PropTypes.any,\n\n    /**\n     * Paste operation has started. See Clipboard Events.\n     */\n    pasteStart: PropTypes.any,\n\n    /**\n     * Paste operation has ended. See Clipboard Events.\n     */\n    pasteEnd: PropTypes.any,\n\n    /**\n     * Sort has changed. The grid also listens for this and updates the model.\n     */\n    sortChanged: PropTypes.any,\n\n    /**\n     * Filter has been modified and applied.\n     */\n    filterChanged: PropTypes.any,\n\n    /**\n     * Filter was modified but not applied. Used when filters have 'Apply' buttons.\n     */\n    filterModified: PropTypes.any,\n\n    /**\n     * A drag has started, or dragging was already started and the mouse has re-entered\n     * the grid having previously left the grid.\n     */\n    rowDragEnter: PropTypes.any,\n\n    /**\n     * The mouse has moved while dragging.\n     */\n    rowDragMove: PropTypes.any,\n\n    /**\n     * The mouse has left the grid while dragging.\n     */\n    rowDragLeave: PropTypes.any,\n\n    /**\n     * The drag has finished over the grid.\n     */\n    rowDragEnd: PropTypes.any,\n\n    /**\n     * A column, or group of columns, was hidden / shown.\n     */\n    columnVisible: PropTypes.any,\n\n    /**\n     * A column, or group of columns, was pinned / unpinned.\n     */\n    columnPinned: PropTypes.any,\n\n    /**\n     * A column was resized.\n     */\n    columnResized: PropTypes.any,\n\n    /**\n     * A column was moved. To find out when the column move is finished you can use the\n     * dragStopped event below.\n     */\n    columnMoved: PropTypes.any,\n\n    /**\n     * A row group column was added or removed.\n     */\n    columnRowGroupChanged: PropTypes.any,\n\n    /**\n     * A value column was added or removed.\n     */\n    columnValueChanged: PropTypes.any,\n\n    /**\n     * The pivot mode flag was changed.\n     */\n    columnPivotModeChanged: PropTypes.any,\n\n    /**\n     * A pivot column was added, removed or order changed.\n     */\n    columnPivotChanged: PropTypes.any,\n\n    /**\n     * A column group was opened / closed.\n     */\n    columnGroupOpened: PropTypes.any,\n\n    /**\n     * User set new columns.\n     */\n    newColumnsLoaded: PropTypes.any,\n\n    /**\n     * The list of grid columns changed.\n     */\n    gridColumnsChanged: PropTypes.any,\n\n    /**\n     * The list of displayed columns changed. This can result from columns open / close,\n     * column move, pivot, group, etc.\n     */\n    displayedColumnsChanged: PropTypes.any,\n\n    /**\n     * The list of rendered columns changed (only columns in the visible scrolled viewport\n     * are rendered by default).\n     */\n    virtualColumnsChanged: PropTypes.any,\n\n    /**\n     * Shotgun - gets called when either a) new columns are set or b) columnApi.setState()\n     * is used, so everything has changed.\n     */\n    columnEverythingChanged: PropTypes.any,\n\n    /**\n     * The grid has initialised. The name 'ready' was influenced by the author's time\n     * programming the Commodore 64. Use this event if, for example, you need to use\n     * the grid's API to fix the columns to size.\n     */\n    gridReady: PropTypes.any,\n\n    /**\n     * The size of the grid div has changed. In other words, the grid was resized.\n     */\n    gridSizeChanged: PropTypes.any,\n\n    /**\n     * Displayed rows have changed. Triggered after sort, filter or tree expand / collapse\n     * events.\n     */\n    modelUpdated: PropTypes.any,\n\n    /**\n     * Fired the first time data is rendered into the grid.\n     */\n    firstDataRendered: PropTypes.any,\n\n    /**\n     * A row group was opened or closed.\n     */\n    rowGroupOpened: PropTypes.any,\n\n    /**\n     * Fired when calling either of the API methods expandAll() or collapseAll().\n     */\n    expandOrCollapseAll: PropTypes.any,\n\n    /**\n     * Triggered every time the paging state changes. Some of the most common scenarios\n     * for this event to be triggered are:The page size changesThe current shown page\n     * is changedNew data is loaded onto the grid\n     */\n    paginationChanged: PropTypes.any,\n\n    /**\n     * The client has set new pinned row data into the grid.\n     */\n    pinnedRowDataChanged: PropTypes.any,\n\n    /**\n     * A row was removed from the DOM, for any reason. Use to clean up resources (if\n     * any) used by the row.\n     */\n    virtualRowRemoved: PropTypes.any,\n\n    /**\n     * Which rows are rendered in the DOM has changed.\n     */\n    viewportChanged: PropTypes.any,\n\n    /**\n     * The body was scrolled horizontally or vertically.\n     */\n    bodyScroll: PropTypes.any,\n\n    /**\n     * When dragging starts. This could be any action that uses the grid's Drag and Drop\n     * service, e.g. Column Moving, Column Resizing, Range Selection, Fill Handle, etc.\n     */\n    dragStarted: PropTypes.any,\n\n    /**\n     * When dragging stops. This could be any action that uses the grid's Drag and Drop\n     * service, e.g. Column Moving, Column Resizing, Range Selection, Fill Handle, etc.\n     */\n    dragStopped: PropTypes.any,\n\n    /**\n     * The client has set new data into the grid using api.setRowData() or by changing\n     * the rowData bound property.\n     */\n    rowDataChanged: PropTypes.any,\n\n    /**\n     * The client has updated data for the grid using api.applyTransaction(transaction)\n     * or by changing the rowData bound property with immutableData=true.\n     */\n    rowDataUpdated: PropTypes.any,\n\n    /**\n     * The tool panel was hidden or shown. Use api.isToolPanelShowing() to get status.\n     */\n    toolPanelVisibleChanged: PropTypes.any,\n\n    /**\n     * Only used by React, Angular and VueJS AG Grid components (not used if doing plain\n     * JavaScript or Angular 1.x). If the grid receives changes due to bound properties,\n     * this event fires after the grid has finished processing the change.\n     */\n    componentStateChanged: PropTypes.any,\n\n    /**\n     * The grid draws rows and cells using animation frames. This event gets fired when\n     * the animation frame queue is empty. Normally used in conjunction with api.isAnimationFrameQueueEmpty()\n     * so user can check if animation frame is pending, and if so then can be notified\n     * when no animation frames are pending. Useful if your application needs to know\n     * when drawing of the grid is no longer pending, e.g. for sending to a printer.\n     */\n    animationQueueEmpty: PropTypes.any,\n\n    /**\n     * Async transactions have been applied. Contains a list of all transaction results.\n     */\n    AsyncTransactionsFlushed: PropTypes.any,\n\n    /**\n     * DOM event keyDown happened on a cell. See Keyboard Events.\n     */\n    cellKeyDown: PropTypes.any,\n\n    /**\n     * DOM event keyPress happened on a cell. See Keyboard Events.\n     */\n    cellKeyPress: PropTypes.any,\n\n    /**\n     * SideBar configures the properties of the grid sidebar.\n     */\n    sideBar: PropTypes.oneOfType([\n        PropTypes.bool,\n        PropTypes.oneOf(['columns', 'filters']),\n        PropTypes.object,\n    ]),\n};\n\nexport const propTypes = DashAgGrid.propTypes;\nexport const defaultProps = DashAgGrid.defaultProps;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js!./custom_styles.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"insertAt\":\"top\",\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/dist/cjs.js!./custom_styles.css\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/dist/cjs.js!./custom_styles.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ddk-container.ddk-container .ag-react-container button {\\n    border: 0;\\n    cursor: pointer;\\n    margin: 0;\\n    display: inline-flex;\\n    outline: 0;\\n    position: relative;\\n    align-items: center;\\n    border-radius: 0;\\n    vertical-align: middle;\\n    justify-content: center;\\n    text-decoration: none;\\n    -moz-user-select: none;\\n    background-color: transparent;\\n    -webkit-appearance: none;\\n    border: 1px solid rgba(0, 0, 0, 0.23);\\n    color: rgba(0, 0, 0, 0.87);\\n    padding: 6px 16px;\\n    font-size: 0.875rem;\\n    min-width: 64px;\\n    box-sizing: border-box;\\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\\n    font-weight: 500;\\n    line-height: 1.75;\\n    border-radius: 4px;\\n    letter-spacing: 0.02857em;\\n    text-transform: uppercase;\\n    margin-bottom: 8px;\\n    margin-top: 1px;\\n}\\n\\n@media (hover: none) {\\n    .ddk-container.ddk-container .ag-react-container button:hover {\\n      background-color: transparent;\\n    }\\n  }\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function DashAgGridColumn() {\n    return <div />;\n}\nDashAgGridColumn.propTypes = {\n    /********************************\n     * DASH PROPS\n     *******************************/\n\n    /**\n     * The ID used to identify this component in Dash callbacks.\n     */\n    id: PropTypes.string,\n\n    /**\n     * Dash-assigned callback that gets fired when the input changes\n     */\n    setProps: PropTypes.string,\n\n    /**\n     * The children of this component\n     */\n    children: PropTypes.node,\n\n    /**\n     * The CSS style for the component\n     */\n    style: PropTypes.object,\n\n    /********************************\n     * CUSTOM PROPS\n     *******************************/\n\n    /**\n     * boolean. Set to true to show a checkbox in the header of a column.\n     * Default Value: false\n     */\n    headerCheckboxSelection: PropTypes.bool,\n\n    /**\n     * boolean. Set to true for checkbox selections to only affect filtered data.\n     * Default Value: false\n     */\n    headerCheckboxSelectionFilteredOnly: PropTypes.bool,\n\n    /********************************\n     * COLDEF PROPS\n     *******************************/\n\n    /********************************\n     * Columns and Column Groups\n     *******************************/\n\n    /**\n     * The name to render in the column header. If not specified and field is specified,\n     * the field name will be used as the header name.\n     */\n    headerName: PropTypes.any,\n\n    /**\n     * Whether to show the column when the group is open / closed.\n     */\n    columnGroupShow: PropTypes.any,\n\n    /**\n     * Class to use for the header cell. Can be a string, array of strings, or function.\n     */\n    headerClass: PropTypes.any,\n\n    /**\n     * Class to use for the tool panel cell. Can be a string, array of strings, or function.\n     */\n    toolPanelClass: PropTypes.any,\n\n    /**\n     * Set to true if you do not want this column or group to appear in the Columns Tool\n     * Panel.\n     * Default Value: false\n     */\n    suppressColumnsToolPanel: PropTypes.bool,\n\n    /**\n     * Set to true if you do not want this column (filter) or group (filter group) to\n     * appear in the Filters Tool Panel.\n     * Default Value: false\n     */\n    suppressFiltersToolPanel: PropTypes.bool,\n\n    /********************************\n     * Columns Only\n     *******************************/\n\n    /**\n     * The field of the row to get the cells data from.\n     */\n    field: PropTypes.any,\n\n    /**\n     * The unique ID to give the column. This is optional. If missing, the ID will default\n     * to the field. If both field and colId are missing, a unique ID will be generated.\n     * This ID is used to identify the column in the API for sorting, filtering etc.\n     */\n    colId: PropTypes.any,\n\n    /**\n     * A comma separated string or array of strings containing ColumnType keys which\n     * can be used as a template for a column. This helps to reduce duplication of properties\n     * when you have a lot of common column properties.\n     */\n    type: PropTypes.any,\n\n    /**\n     * Initial width in pixels for the cell.\n     */\n    width: PropTypes.any,\n\n    /**\n     * Same as 'width', except only applied when creating a new column. Not applied when\n     * updating column definitions.\n     */\n    defaultWidth: PropTypes.any,\n\n    /**\n     * Minimum width in pixels for the cell.\n     */\n    minWidth: PropTypes.any,\n\n    /**\n     * Maximum width in pixels for the cell.\n     */\n    maxWidth: PropTypes.any,\n\n    /**\n     * Used instead of width when the goal is to fill the remaining empty space of the\n     * grid. See Column Flex.\n     */\n    flex: PropTypes.any,\n\n    /**\n     * Same as 'flex', except only applied when creating a new column. Not applied when\n     * updating column definitions.\n     */\n    initialFlex: PropTypes.any,\n\n    /**\n     * Filter component to use for this column. Set to true to use the default filter.\n     */\n    filter: PropTypes.any,\n\n    /**\n     * Custom params to be passed to filter component.\n     */\n    filterParams: PropTypes.any,\n\n    /**\n     * Whether to show a floating filter for this column.\n     * Default Value: false\n     */\n    floatingFilter: PropTypes.bool,\n\n    /**\n     * Floating filter component to use for this column.\n     */\n    floatingFilterComponent: PropTypes.any,\n\n    /**\n     * Custom params to be passed to floatingFilterComponent or floatingFilterComponentFramework.\n     */\n    floatingFilterComponentParams: PropTypes.any,\n\n    /**\n     * Set to true for this column to be hidden. You might think it would make more sense\n     * to call this field visible and mark it false to hide, but we want all default\n     * values to be false and we want columns to be visible by default.\n     * Default Value: false\n     */\n    hide: PropTypes.bool,\n\n    /**\n     * Same as 'hide', except only applied when creating a new column. Not applied when\n     * updating column definitions.\n     */\n    initialHide: PropTypes.any,\n\n    /**\n     * Pin a column to one side.\n     */\n    pinned: PropTypes.any,\n\n    /**\n     * Same as 'pinned', except only applied when creating a new column. Not applied\n     * when updating column definitions.\n     */\n    initialPinned: PropTypes.any,\n\n    /**\n     * Set to true to always have this column displayed first.\n     * Default Value: false\n     */\n    lockPosition: PropTypes.bool,\n\n    /**\n     * Set to true to block making column visible / hidden via the UI (API will still\n     * work).\n     * Default Value: false\n     */\n    lockVisible: PropTypes.bool,\n\n    /**\n     * Set to true to block pinning column via the UI (API will still work).\n     * Default Value: false\n     */\n    lockPinned: PropTypes.bool,\n\n    /**\n     * Set to true to allow sorting on this column.\n     * Default Value: false\n     */\n    sortable: PropTypes.bool,\n\n    /**\n     * Set to sort this column.\n     * Default Value: [null, 'asc', 'desc']\n     */\n    sort: PropTypes.oneOf([null, 'asc', 'desc']),\n\n    /**\n     * Same as 'sort', except only applied when creating a new column. Not applied when\n     * updating column definitions.\n     */\n    initialSort: PropTypes.any,\n\n    /**\n     * If doing multi-sort by default, the order which column sorts are applied.\n     */\n    sortIndex: PropTypes.any,\n\n    /**\n     * Same as 'sortIndex', except only applied when creating a new column. Not applied\n     * when updating column definitions.\n     */\n    initialSortIndex: PropTypes.any,\n\n    /**\n     * Array defining the order in which sorting occurs (if sorting is enabled).\n     * Default Value: [null, 'asc', 'desc']\n     */\n    sortingOrder: PropTypes.oneOf([null, 'asc', 'desc']),\n\n    /**\n     * Set to true to allow column to be resized.\n     * Default Value: false\n     */\n    resizable: PropTypes.bool,\n\n    /**\n     * Tooltip for the column header\n     */\n    headerTooltip: PropTypes.any,\n\n    /**\n     * The field of the tooltip to apply to the cell.\n     */\n    tooltipField: PropTypes.any,\n\n    /**\n     * Callback that should return the string used for a tooltip.function (params: IParams):\n     * string;\n     */\n    tooltipValueGetter: PropTypes.any,\n\n    /**\n     * boolean or Function. Set to true (or return true from function) to render a selection\n     * checkbox in the column.\n     * Default Value: false\n     */\n    checkboxSelection: PropTypes.bool,\n\n    /**\n     * boolean or Function. Set to true (or return true from function) to allow row dragging.\n     * Default Value: false\n     */\n    rowDrag: PropTypes.bool,\n\n    /**\n     * A callback that should return a string to be displayed by the rowDragComp while\n     * dragging a row. If this callback is not set, the current cell value will be used.function\n     * (params: IParams): string;\n     */\n    rowDragText: PropTypes.any,\n\n    /**\n     * boolean or Function. Set to true (or return true from function) to allow dragging\n     * for native drag and drop.\n     * Default Value: false\n     */\n    dndSource: PropTypes.bool,\n\n    /**\n     * Function to allow custom drag functionality for native drag and drop.\n     */\n    dndSourceOnRowDrag: PropTypes.any,\n\n    /**\n     * The style to give a particular cell. See Cell Style.\n     */\n    cellStyle: PropTypes.any,\n\n    /**\n     * The class to give a particular cell. See Cell Class.\n     */\n    cellClass: PropTypes.any,\n\n    /**\n     * Rules which can be applied to include certain CSS classes. See Cell Class Rules.\n     */\n    cellClassRules: PropTypes.any,\n\n    /**\n     * Set to true if this column is editable, otherwise false. Can also be a function\n     * to have different rows editable.\n     * Default Value: false\n     */\n    editable: PropTypes.bool,\n\n    /**\n     * cellRenderer to use for this column.\n     */\n    cellRenderer: PropTypes.any,\n\n    /**\n     * Params to be passed to cell renderer component.\n     */\n    cellRendererParams: PropTypes.any,\n\n    /**\n     * cellRenderer to use for pinned rows in this column. Pinned cells will use pinnedCellRenderer\n     * if available, or cellRenderer if not.\n     */\n    pinnedRowCellRenderer: PropTypes.any,\n\n    /**\n     * Params to be passed to pinned row cell renderer component.\n     */\n    pinnedRowCellRendererParams: PropTypes.any,\n\n    /**\n     * Callback to select which cell renderer / cell editor to be used for a given row\n     * within the same column.\n     */\n    cellRendererSelector: PropTypes.any,\n\n    /**\n     * cellEditor to use for this column.\n     */\n    cellEditor: PropTypes.any,\n\n    /**\n     * Params to be passed to cell editor component.\n     */\n    cellEditorParams: PropTypes.any,\n\n    /**\n     * Header component to use for this column.\n     */\n    headerComponent: PropTypes.any,\n\n    /**\n     * Params to be passed to header component.\n     */\n    headerComponentParams: PropTypes.any,\n\n    /**\n     * A function to tell the grid what quick filter text to use for this column if you\n     * don't want to use the default (which is calling toString on the value).\n     */\n    getQuickFilterText: PropTypes.any,\n\n    /**\n     * Name of function to use for aggregation. You can also provide your own agg function.\n     */\n    aggFunc: PropTypes.any,\n\n    /**\n     * Same as 'aggFunc', except only applied when creating a new column. Not applied\n     * when updating column definitions.\n     */\n    initialAggFunc: PropTypes.any,\n\n    /**\n     * Aggregation functions allowed on this column e.g. ['sum', 'avg']. If missing,\n     * all installed functions are allowed. This will only restrict what the GUI allows\n     * a user to select, it does not impact when you set a function via the API.\n     */\n    allowedAggFuncs: PropTypes.any,\n\n    /**\n     * Set to true to row group by this column\n     */\n    rowGroup: PropTypes.any,\n\n    /**\n     * Same as 'rowGroup', except only applied when creating a new column. Not applied\n     * when updating column definitions.\n     */\n    initialRowGroup: PropTypes.any,\n\n    /**\n     * Set this in columns you want to group by. If only grouping by one column, set\n     * this to any number (e.g. 0). If grouping by multiple columns, set this to where\n     * you want this column to be in the group (e.g. 0 for first, 1 for second, and so\n     * on).\n     */\n    rowGroupIndex: PropTypes.any,\n\n    /**\n     * Same as 'rowGroupIndex', except only applied when creating a new column. Not applied\n     * when updating column definitions.\n     */\n    initialRowGroupIndex: PropTypes.any,\n\n    /**\n     * Set to true to pivot by this column\n     */\n    pivot: PropTypes.any,\n\n    /**\n     * Same as 'pivot', except only applied when creating a new column. Not applied when\n     * updating column definitions.\n     */\n    initialPivot: PropTypes.any,\n\n    /**\n     * Set this in columns you want to pivot by. If only pivoting by one column, set\n     * this to any number (e.g. 0). If pivoting by multiple columns, set this to where\n     * you want this column to be in the order of pivots (e.g. 0 for first, 1 for second,\n     * and so on).\n     */\n    pivotIndex: PropTypes.any,\n\n    /**\n     * Same as 'pivotIndex', except only applied when creating a new column. Not applied\n     * when updating column definitions.\n     */\n    initialPivotIndex: PropTypes.any,\n\n    /**\n     * Set to true if you want the unsorted icon to be shown when no sort is applied\n     * to this column.\n     * Default Value: false\n     */\n    unSortIcon: PropTypes.bool,\n\n    /**\n     * (Enterprise only) Set to true if you want to be able to row group by this column\n     * via the GUI. This will not block the API or properties being used to achieve row\n     * grouping.\n     * Default Value: false\n     */\n    enableRowGroup: PropTypes.bool,\n\n    /**\n     * (Enterprise only) Set to true if you want to be able to pivot by this column via\n     * the GUI. This will not block the API or properties being used to achieve pivot.\n     * Default Value: false\n     */\n    enablePivot: PropTypes.bool,\n\n    /**\n     * (Enterprise only) Set to true if you want to be able to aggregate by this column\n     * via the GUI. This will not block the API or properties being used to achieve aggregation.\n     * Default Value: false\n     */\n    enableValue: PropTypes.bool,\n\n    /**\n     * Set to true to flash a cell when it's refreshed.\n     * Default Value: false\n     */\n    enableCellChangeFlash: PropTypes.bool,\n\n    /**\n     * Set to an array containing zero, one or many of the following options: 'filterMenuTab'\n     * | 'generalMenuTab' | 'columnsMenuTab'. This is used to figure out which menu tabs\n     * are present and in which order the tabs are shown.\n     */\n    menuTabs: PropTypes.any,\n\n    /**\n     * Set to true if no menu should be shown for this column header.\n     * Default Value: false\n     */\n    suppressMenu: PropTypes.bool,\n\n    /**\n     * Set to true if you want this column's width to be fixed during 'size to fit' operations.\n     * Default Value: false\n     */\n    suppressSizeToFit: PropTypes.bool,\n\n    /**\n     * Set to true if you do not want this column to be movable via dragging.\n     * Default Value: false\n     */\n    suppressMovable: PropTypes.bool,\n\n    /**\n     * Set to true if this column is not navigable (i.e. cannot be tabbed into), otherwise\n     * false. Can also be a callback function to have different rows navigable.\n     * Default Value: false\n     */\n    suppressNavigable: PropTypes.bool,\n\n    /**\n     * Set to true to prevent this column from flashing on changes. Only applicable if\n     * cell flashing is turned on for the grid.\n     * Default Value: false\n     */\n    suppressCellFlash: PropTypes.bool,\n\n    /**\n     * Set to true to have the grid calculate the height of a row based on contents of\n     * this column.\n     * Default Value: false\n     */\n    autoHeight: PropTypes.bool,\n\n    /**\n     * Set to true to have the text wrap inside the cell.\n     * Default Value: false\n     */\n    wrapText: PropTypes.bool,\n\n    /**\n     * Set to true to have cells under this column enter edit mode after single click.\n     * Default Value: false\n     */\n    singleClickEdit: PropTypes.bool,\n\n    /**\n     * Defines the chart data type that should be used for a column.\n     */\n    chartDataType: PropTypes.any,\n\n    /**\n     * Params used to change the behaviour and appearance of the Columns Menu tab. See\n     * Customising the Columns Menu Tab.\n     */\n    columnsMenuParams: PropTypes.any,\n\n    /********************************\n     * Column Groups Only\n     *******************************/\n\n    /**\n     * The unique ID to give the column. This is optional. If missing, a unique ID will\n     * be generated. This ID is used to identify the column group in the column API.\n     */\n    groupId: PropTypes.any,\n\n    /**\n     * A list containing a mix of columns and column groups.\n     */\n    children: PropTypes.any,\n\n    /**\n     * Set to true to keep columns in this group beside each other in the grid. Moving\n     * the columns outside of the group (and hence breaking the group) is not allowed.\n     * Default Value: false\n     */\n    marryChildren: PropTypes.bool,\n\n    /**\n     * Set to true if this group should be opened by default.\n     * Default Value: false\n     */\n    openByDefault: PropTypes.bool,\n\n    /**\n     * Component to use header group.\n     */\n    headerGroupComponent: PropTypes.any,\n\n    /**\n     * Params for the header group component.\n     */\n    headerGroupComponentParams: PropTypes.any,\n};\n","/* eslint-disable import/prefer-default-export */\nimport AgGrid from './components/AgGrid.react';\nimport AgGridColumn from './components/AgGridColumn.react';\nimport './custom_styles.css';\n\nexport {AgGrid, AgGridColumn};\n","(function() { module.exports = window[\"ReactDOM\"]; }());"],"sourceRoot":""}